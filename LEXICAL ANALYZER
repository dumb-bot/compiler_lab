***LEX***


#include <iostream>
#include <cstring>
#include <sstream>
#include <fstream>
#include <string>
#include <cstdio>
#include <cstdlib>

using namespace std;

#define emp -99
#define tot_states 4
#define input 3



int init;
int fin[tot_states];
int tot_states;
int auto_arr[tot_states][input];


int main(){
	int i,j;
	const char *inval;
	int flag=0;
	ifstream in("automata input.txt");

	for(i=0;i<tot_states;i++)
		fin[i]=emp;

	string line;

	getline(in,line);
	init = atoi(line.c_str());

	getline(in,line);
	istringstream line_stream(line);
	string cell;
	i=0;
	while(getline(line_stream,cell,' ')){
		fin[i] = atoi(cell.c_str());
		i++;
	}

	i=0;
	while(getline(in,line)){

		istringstream line_stream(line);
		string cell;

		j=0;
		while(getline(line_stream,cell,' ')){
			auto_arr[i][j] = atoi(cell.c_str());
			j++;
		}
		i++;
	}

	cout<<"automata for LEXICAL ANALYZER: \n\n";
	cout<<"\t[A-Z],[a-z],_\t[0-9]\t\tSpl\n";
	for(i=0;i<tot_states;i++){
		cout<<"q"<<i<<"\t";
		for(j=0;j<input;j++)
			cout<<auto_arr[i][j]<<"\t\t";
		cout<<endl;
	}
	cout<<"\n\n";

	ifstream input("lex_input.txt");

	while(getline(input,line)){
		inval = line.c_str();
		cout << inval;

		tot_states = init;
		flag = 0;
		for (i = 0; inval[i]!='\0'; i++){
			if((inval[i]>='a' && inval[i]<='z') || (inval[i]>='A' && inval[i]<='Z') || inval[i]=='_'){
				tot_states = auto_arr[tot_states][0];
			}
			else if(inval[i]>='0' && inval[i]<='9'){
				tot_states = auto_arr[tot_states][1];
			}
			else{
				cout<<"\t\tInput Invalid";
				flag = 1;
				break;
			}
		}
		if (flag==1){
			cout<<"\t\tInput Rejected \n";
		}
		else{
			if(tot_states==1){
				cout<<"\t\tId\t\tAccepted \n";
			}
			else if(tot_states==2){
				cout<<"\t\tNum\t\tAccepted \n";	
			}
			else{
				cout<<"\t\tInvalid Input\t\tRejected \n";
			}
		}
	}

}

---INPUT---

0
1 2
1 2 3
1 1 3
3 2 3
3 3 3
